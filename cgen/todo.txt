Plans for future releases:
-- Implementing a DSL for the actor-task model in C ++;
-- Determining the boundaries of an implicit markup; 
-- New architecture:
				~/lang/tools/tlang -- new Templet language processor;
				~/lang/tools/actam -- new processor for the actor-task model (based on tlang);
				~/lang/actam.hpp   -- DSL for the actor-task model in C++.

-----------tlang.exe---------
    ___
   |_>_|   The Temlet Project SDK (http://templet.ssau.ru)
   |_>_|   Templet language processor  v.0.9.0
  TEMPLET  Copyright 2016-202?, Sergei Vostokin
  
 Usage:  tlang {options}
 
 Options:
 -h -H -- print this screen (it also printed if no options or uncorrect options are set)
 -v -V -- verbose preprocessor's operations;
          notice: error information is always outputs to the stderr stream
 -i -I <file> -- input file
 -o -O <file> -- output file
 -s -S <file> -- source template file
 -d -D <file> -- destination template file
 -t -T <file> -- transformation template file 
 -m -M <sign_1> <sign_2> <sign_3> -- defines the custom signature of the templet markup;
                                     default setting is -M /*$tt$ */ /*$tt$*/ 
   ...
 Other options control unreferenced blocks, backup files, block key extraction, getting transformation template from stdin, putting transformation results to stdout, etc.
 
 Examples:
   ...
   